@using WorldCup.Common.Entities
@using WorldCup.Extensions
@model Match

@{
    ViewBag.Title = "Edit match details";
}

<h3>Edit match details @Model.HomeTeam.Name vs @Model.AwayTeam.Name</h3>

@using (Html.BeginForm("Edit", "AdminMatches", FormMethod.Post, new {role = "form"}))
{
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m=>m.HomeTeamId)
    @Html.HiddenFor(m=>m.AwayTeamId)
 
    @Html.ValidationSummary()
    
    <div class="row">
        <div class="col-md-6">
            <p><strong>@Html.Partial("_FlaggedTeam", new[] { Model.HomeTeam.Name, Model.HomeTeam.Code })</strong> vs <strong>@Html.Partial("_FlaggedTeam", new[] { Model.AwayTeam.Name, Model.AwayTeam.Code })</strong></p>
        </div>
    </div>
    <div class="row">
        <div class='col-md-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.State)
                @Html.EnumDropDownListFor(m => m.State, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.State)
            </div>
            <div class='col-md-7'>
                <div class="form-group">
                    @Html.LabelFor(m => m.Date)
                    @Html.EditorFor(m => m.Date, "_DateTime")
                    @Html.ValidationMessageFor(m => m.Date)
                    <span class="label label-danger">The date and time should be UTC</span>
                </div>
            </div>
        </div>
        <div class='col-md-3'>
            <div class="form-group">
                @Html.LabelFor(m => m.HomeTeamHalfTimeGoals, string.Format("{0} half time goals", Model.HomeTeam.Name))
                @Html.BootstrapEditorFor(m => m.HomeTeamHalfTimeGoals, Model.State != MatchState.Finalized)
                @Html.ValidationMessageFor(m => m.HomeTeamHalfTimeGoals)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.AwayTeamHalfTimeGoals, string.Format("{0} half time goals", Model.AwayTeam.Name))
                @Html.BootstrapEditorFor(m => m.AwayTeamHalfTimeGoals, Model.State != MatchState.Finalized)
                @Html.ValidationMessageFor(m => m.AwayTeamHalfTimeGoals)
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.HomeTeamFullTimeGoals, string.Format("{0} full time goals", Model.HomeTeam.Name))
                @Html.BootstrapEditorFor(m => m.HomeTeamFullTimeGoals, Model.State != MatchState.Finalized)
                @Html.ValidationMessageFor(m => m.HomeTeamFullTimeGoals)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.AwayTeamFullTimeGoals, string.Format("{0} full time goals", Model.AwayTeam.Name))
                @Html.BootstrapEditorFor(m => m.AwayTeamFullTimeGoals, Model.State != MatchState.Finalized)
                @Html.ValidationMessageFor(m => m.AwayTeamFullTimeGoals)
            </div>
        </div>
        <div class='col-md-3'>
            <div class="form-group">
                @Html.LabelFor(m => m.YellowCards, "Yellow cards*")
                @Html.BootstrapEditorFor(m => m.YellowCards, Model.State != MatchState.Finalized)
                @Html.ValidationMessageFor(m => m.YellowCards)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.RedCards, "Red cards*")
                @Html.BootstrapEditorFor(m => m.RedCards, Model.State != MatchState.Finalized)
                @Html.ValidationMessageFor(m => m.RedCards)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Result, "Final result*")
                @{
                    var htmlAttributes = new Dictionary<string, object>
                    {
                        {"class", "form-control"}
                    };
                    if (Model.State == MatchState.Finalized)
                    {
                        htmlAttributes.Add("disabled", "disabled");
                    }
                }
                @Html.DropDownListFor(m => m.Result, Model.Result.ToSelectList(Model), htmlAttributes)
                @Html.ValidationMessageFor(m => m.Result)
                <span class="help-block">* = after extra time or penalties</span>
            </div>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
}
&nbsp;
<div class="btn-group btn-group-justified">
    @Html.ActionLink("Previous match", "Edit", "AdminMatches", new { id = ViewBag.PreviousMatchId }, new { @class = "btn btn-info btn-group" })
    @Html.ActionLink("Back to list", "Index", "AdminMatches", new { @class = "btn btn-info btn-group" })
    @Html.ActionLink("Next match", "Edit", "AdminMatches", new { id = ViewBag.NextMatchId }, new { @class = "btn btn-info btn-group" })
</div>