@using GridMvc.Html
@model WorldCup.Models.HomeViewModel

@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <div class="row">
        <div class="col-xs-4 col-md-2"><img src=@string.Format("/Content/images/{0}", Model.Logo) class="img-responsive" alt="Unicef logo"></div>
        <div class="col-xs-8 col-md-10">
            <h3>
                @Model.LogoText<br>
                <small>for UNICEF</small>
            </h3>
            <p class="text-right"><span class="label label-danger" id="days-remaining"></span> days remaining</p>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <h1>Introduction</h1>
        <p>@Model.IntroductionText Don't forget to check the @Html.ActionLink("rules", "Rules", "Home").</p>
        <h1>Current ranking</h1>
        <p>After every match the scores will be updated as soon as possible. </p>
        <div id="rankingChart" style="max-width:700px;height: 300px;"></div>
        Check the <a href="/Rankings">rankings</a> for a complete overview.
        @if (Request.IsAuthenticated)
        {
            <h1>Your latest results</h1>

            @Html.Grid(Model.UserLatestResults).Named("userLatestResults").Columns(columns =>
        {
            columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(lr => Html.Partial("_LocalizableDateTime", lr.Date))
                .Titled("Date").SetWidth(30);
            columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(ur => Html.ActionLink(ur.Match, "MatchPrediction", "Predictions", new { id = ur.MatchId }, null))
                .Titled("Match")
                .SetWidth(60);
            columns.Add(ur => ur.Points).Titled("Points").SetWidth(10);
        }).Selectable(false)

            <p>Check your @Html.ActionLink("personal page", "Index", "UserResults") for a more detailed view.</p>
        }
    </div>
    <div class="col-md-6">
        @if (Request.IsAuthenticated)
        {
            <h1>Your predictions</h1>
            <p>At the start of the match, all preditions will freeze. You will see your predictions of the coming matches below.</p>
            @Html.Grid(Model.UserPredictionMatches).Named("matchesPredictions").Columns(columns =>
        {
            columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .RenderValueAs(mp => Html.Partial("_LocalizableDateTime", mp.Match.Date))
            .Titled("Date")
            .SetWidth(20);
            columns.Add(mp => mp.Match.HomeTeam.Name)
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(mp => Html.Partial("_FlaggedTeam", new[] { mp.Match.HomeTeam.Name, mp.Match.HomeTeam.Code }))
                .Titled("Home Team")
                .SetWidth(30);
            columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(mp => Html.ActionLink(string.Format("{0} - {1}", mp.HomeTeamFullTimeGoals, mp.AwayTeamFullTimeGoals),
                    "MatchPrediction", "Predictions", new { id = mp.MatchId }, null))
                .Titled("Score")
                .SetWidth(20);
            columns.Add(mp => mp.Match.AwayTeam.Name)
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(mp => Html.Partial("_FlaggedTeam", new[] { mp.Match.AwayTeam.Name, mp.Match.AwayTeam.Code }))
                .Titled("Away Team")
                .SetWidth(30);
        }).Selectable(false)
            <p>Check the <a href="/Predictions/">predictions</a> of others for these matches.</p>
        }
        else
        {
            <p>Please log in to see your predictions.</p>
        }
        <h1>Upcoming matches</h1>
        @Html.Grid(Model.UpcomingMatches).Named("upcomingMatches").Columns(columns =>
        {
            columns.Add(u => u.Id, true);
            columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .RenderValueAs(m => Html.Partial("_LocalizableDateTime", m.Date))
            .Titled("Date")
            .SetWidth(35);
            columns.Add(m => m.Stage).Titled("Stage").SetWidth(10);
            columns.Add(u => u.HomeTeam.Name)
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(u => Html.Partial("_FlaggedTeam", new[] { u.HomeTeam.Name, u.HomeTeam.Code }))
                .Titled("Home Team")
                .SetWidth(25);
            columns.Add(u => u.AwayTeam.Name)
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(u => Html.Partial("_FlaggedTeam", new[] { u.AwayTeam.Name, u.AwayTeam.Code }))
                .Titled("Away Team")
                .SetWidth(25);
        })
        <p>See the whole <a href="/Predictions">match schedule</a> and for your predictions.</p>

        <h2>Money raised</h2>
        <div id="unicefChart" style="max-width:700px;height: 300px;"></div>
        Check where <a href="http://www.unicef.com">your donation goes to</a>.
    </div>
</div>

<script type="text/javascript">

    $(function () {
        $.ajax({
            url: '/Rankings/TopUsersInfo?numberOfUsers=5',
            type: 'GET',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                updateTopFiveChart(data);
            },
            error: function (data) {
                toastr.error(data.statusText);
            }
        });
        $.ajax({
            url: '/Home/RaisedMoney',
            type: 'GET',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                updateRaisedMoneyChart(data);
            },
            error: function (data) {
                toastr.error(data.statusText);
            }
        });
    });

    var updateRaisedMoneyChart = function (data) {
        $("#unicefChart").dxChart({
            tooltip: {
                enabled: true
            },
            dataSource: data,
            legend: {
                horizontalAlignment: 'center',
                verticalAlignment: 'bottom'
            },
            series: {
                argumentField: "date",
                valueField: "amount",
                name: "Money raised (in euro)",
                type: "bar",
                color: '#28b62c'
            }
        });
    }

    var updateTopFiveChart = function (data) {

        $("#rankingChart").dxChart({
            title: {
                text: 'Current top 5 (last update: 12 May)'
            },
            legend: {
                horizontalAlignment: 'center',
                verticalAlignment: 'bottom'
            },
            tooltip: {
                enabled: true
            },
            dataSource: data.rankings,

            commonSeriesSettings: {
                argumentField: 'date'
            },
            series: data.users
        });
    }

    var now = moment();
    var kickOff = moment([2014, 5, 13]),
        daysRemaining = kickOff.diff(now, 'days');

    $("#days-remaining").text(daysRemaining);

</script>