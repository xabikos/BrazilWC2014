@using GridMvc.Html
@model WorldCup.Models.HomeViewModel

@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <div class="row">
        <div class="col-xs-4 col-md-2"><img src="/Content/images/pool.logo.png" class="img-responsive" alt="Unicef logo"></div>
        <div class="col-xs-8 col-md-10">
            <h3>
                NIPO World Cup 2014 Pool<br>
                <small>for UNICEF</small>
            </h3>
            <p class="text-right"><span class="label label-danger" id="days-remaining"></span> days remaining</p>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <h1>Introduction</h1>
        <p>Welcome to the NIPO UNICEF World Cup Pool. The minimum amount to take part in this pool is €10,-. Please note that all the proceeds will go to UNICEF. But what is there to win then, apart from ever lasting glory? Well, it's actually a really nice dinner on the roof of an Amsterdam building, with a very special - foreign - cook. How to win? Check the <a href="/Home/Rules">rules</a>.</p>
        <h1>Current ranking</h1>
        <p>After every match the scores will be updated as soon as possible. </p>
        <div id="rankingChart" style="max-width:700px;height: 300px;"></div>
        Check the <a href="/Rankings">rankings</a> for a complete overview.
        <h1>Your latest results</h1>
        <p>Graphic with current rankings</p>

        @Html.Grid(Model.UserLatestResults).Named("userLatestResults").Columns(columns =>
        {
            columns.Add(ur => ur.Date).Titled("Date").SetWidth(30);
            columns.Add(ur => ur.Match).Titled("Match").SetWidth(60);
            columns.Add(ur => ur.Points).Titled("Points").SetWidth(10);
        })

        Check your <a href="/Results">personal page</a> for a more detailed view.
    </div>
    <div class="col-md-6">
        <h1>Your predictions</h1>
        <p>24 hours before a match is played, all preditions for that match will freeze. You will see your predictions of the coming match below.</p>
        @Html.Grid(Model.UserPredictionMatches).Named("matchesPredictions").Columns(columns =>
        {
            columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .RenderValueAs(mp => mp.Match.Date.Add((TimeSpan)ViewBag.TimeZoneOffset).ToString("dd/MM/yyyy HH:mm"))
            .Titled("Date")
            .SetWidth(20);
            columns.Add(mp => mp.Match.HomeTeam.Name)
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(mp => Html.Partial("_FlaggedTeam", new[] { mp.Match.HomeTeam.Name, mp.Match.HomeTeam.Code }))
                .Titled("Home Team")
                .SetWidth(30);
            columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(mp => string.Format("{0} - {1}", mp.Match.HomeTeamFullTimeGoals, mp.Match.AwayTeamFullTimeGoals))
                .Titled("Score")
                .SetWidth(20);
            columns.Add(mp => mp.Match.AwayTeam.Name)
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(mp => Html.Partial("_FlaggedTeam", new[] { mp.Match.AwayTeam.Name, mp.Match.AwayTeam.Code }))
                .Titled("Away Team")
                .SetWidth(30);
        })
        <p>Check the <a href="/Predictions/1/2">predictions</a> of others for these matches.</p>
        <h1>Upcoming matches</h1>
        @Html.Grid(Model.UpcomingMatches).Named("upcomingMatches").Columns(columns =>
        {
            columns.Add(u => u.Id, true);
            // columns.Add().RenderValueAs(u => "<button type='button' class='btn btn-primary' value='" + u.Id + "'>Predict</button>");
            columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .RenderValueAs(m => m.Date.Add((TimeSpan)ViewBag.TimeZoneOffset).ToString("dd/MM/yyyy HH:mm"))
            .Titled("Date")
            .SetWidth(35);
            columns.Add(m => m.Stage).Titled("Stage").SetWidth(10);
            columns.Add(u => u.HomeTeam.Name)
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(u => Html.Partial("_FlaggedTeam", new[] { u.HomeTeam.Name, u.HomeTeam.Code }))
                .Titled("Home Team")
                .SetWidth(25);
            columns.Add(u => u.AwayTeam.Name)
                .Encoded(false)
                .Sanitized(false)
                .RenderValueAs(u => Html.Partial("_FlaggedTeam", new[] { u.AwayTeam.Name, u.AwayTeam.Code }))
                .Titled("Away Team")
                .SetWidth(25);
        })
        <p>See the whole <a href="/Predictions">match schedule</a> and start predicting.</p>

        <h2>Money raised</h2>
        <div id="unicefChart" style="max-width:700px;height: 300px;"></div>
        See how you can make a <a href="/Contributions">contribution</a> to UNICEF and see <a href="http://www.unicef.com">where your money goes to</a>.
    </div>
</div>

<script type="text/javascript">

    $(function () {
        $.ajax({
            url: '/Rankings/TopUsersInfo?numberOfUsers=5',
            type: 'GET',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            success: function (data) {
                updateTopFiveChart(data);
            },
            error: function (data) {
                toastr.error(data.statusText);
            }
        });
    });

    var currentRaisedMoneySource = [
    {
        date: "2 June",
        amount: 20
    },
    {
        date: "3 June",
        amount: 60
    },
    {
        date: "4 June",
        amount: 70
    },
    {
        date: "5 June",
        amount: 90
    },
    {
        date: "6 June",
        amount: 120
    }
    ];

    var updateTopFiveChart = function (data) {

        $("#rankingChart").dxChart({
            title: {
                text: 'Current top 5 (last update: 12 May)'
            },
            legend: {
                horizontalAlignment: 'center',
                verticalAlignment: 'bottom'
            },
            tooltip: {
                enabled: true
            },
            dataSource: data.rankings,

            commonSeriesSettings: {
                argumentField: 'date'
            },
            series: data.users
        });
    }

    $("#unicefChart").dxChart({
        tooltip: {
            enabled: true
        },
        dataSource: currentRaisedMoneySource,
        legend: {
            horizontalAlignment: 'center',
            verticalAlignment: 'bottom'
        },
        series: {
            argumentField: "date",
            valueField: "amount",
            name: "Money raised (in euro)",
            type: "bar",
            color: '#28b62c'
        }
    });

    var now = moment();
    var kickOff = moment([2014, 5, 13]),
        daysRemaining = kickOff.diff(now, 'days')

    $("#days-remaining").text(daysRemaining);

</script>