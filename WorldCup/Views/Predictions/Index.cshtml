@using GridMvc.Html

@model IQueryable<WorldCup.Common.Entities.Match>

@{
    ViewBag.Title = "Predictions";
}

<div class="page-header">
    <h1>Group phase predictions</h1>
</div>

@{
    var matchesUserHasDonePredictions = (List<int>)ViewBag.UserPredictions;
}

@Html.Grid(Model).Named("matches").Columns(columns =>
    {
        columns.Add(m => m.Id, true);
        columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .RenderValueAs(m => @Html.ActionLink(DateTime.UtcNow < m.Date ? "Predict" : "Show info", "MatchPrediction", new {id = m.Id}, 
                new {@class = matchesUserHasDonePredictions.Contains(m.Id) ? "btn btn-success" : "btn btn-primary"}))
            .SetWidth(10);
        columns.Add()
            .Encoded(false)
            .Sanitized(false)
            .RenderValueAs(m => m.Date.Add((TimeSpan)ViewBag.TimeZoneOffset).ToString("dd/MM/yyyy HH:mm"))
            .Titled("Date")
            .SetWidth(25);
        columns.Add(m => m.Stage).Titled("Stage").SetWidth(5);
        columns.Add(m => m.HomeTeam.Name)
            .Encoded(false)
            .Sanitized(false)
            .RenderValueAs(m => Html.Partial("_FlaggedTeam", new[] { m.HomeTeam.Name, m.HomeTeam.Code }))
            .Titled("Home Team")
            .SetWidth(30);
        columns.Add(u => u.AwayTeam.Name)
            .Encoded(false)
            .Sanitized(false)
            .RenderValueAs(m => Html.Partial("_FlaggedTeam", new[] { m.AwayTeam.Name, m.AwayTeam.Code }))
            .Titled("Away Team")
            .SetWidth(30);
    }).Sortable().WithPaging(10)