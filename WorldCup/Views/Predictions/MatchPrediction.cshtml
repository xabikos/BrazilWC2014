@using WorldCup.Extensions
@model WorldCup.Common.Entities.MatchPrediction

@{
    ViewBag.Title = string.Format("{0} vs {1} predictions", Model.Match.HomeTeam.Name, Model.Match.AwayTeam.Name);
}

<div class="row">
    <div class="col-md-6">
        <h2>
            Match prediction<br>
            <small>@Model.Match.HomeTeam.Name vs @Model.Match.AwayTeam.Name <span class="badge">@Model.Match.Stage</span></small>
        </h2>
    </div>
    <div class="col-md-6 text-right">
        <h4>
            <span id="match-date"></span><br />
            <small>your local time</small>
        </h4>
    </div>
</div>

<hr class="divider" />

@using (Html.BeginForm("MatchPrediction", "Predictions", FormMethod.Post, new { role = "form", @class = "form-horizontal" }))
{
    @Html.HiddenFor(m => m.MatchPredictionId)
    @Html.HiddenFor(m => m.MatchId)

    <div class="row">

        <div class="col-xs-6 col-md-4"></div>
        <div class="col-xs-3 col-md-2 text-center">
            @Html.Partial("_TeamFlag", new[] { Model.Match.HomeTeam.Code, Model.Match.HomeTeam.Name })
        </div>
        <div class="col-xs-1 visible-lg"></div>
        <div class="col-xs-3 col-md-2 text-center">
            @Html.Partial("_TeamFlag", new[] { Model.Match.AwayTeam.Code, Model.Match.AwayTeam.Name })
        </div>
        <div class="visible-lg col-md-3"></div>
    </div>
    
    <div class="row">

        <div class="form-group">

            <div class="col-xs-6 col-md-4 text-right"><label class="control-label">Half time score</label></div>
            <div class="col-xs-3 col-md-2">@Html.BootstrapEditorFor(m => m.HomeTeamHalfTimeGoals, (bool)ViewBag.IsMatchPredictionsEnabled)</div>
            <div class="visible-lg col-md-1 text-center"><label class="text-center">-</label></div>
            <div class="col-xs-3 col-md-2">@Html.BootstrapEditorFor(m => m.AwayTeamHalfTimeGoals, (bool)ViewBag.IsMatchPredictionsEnabled)</div>
            <div class="col-xs-12 col-md-3">@Html.ValidationMessageFor(m => m.HomeTeamHalfTimeGoals) @Html.ValidationMessageFor(m => m.AwayTeamHalfTimeGoals)</div>

        </div>

     </div>
    
    <div class="row">

        <div class="form-group">

            <div class="col-xs-6 col-md-4 text-right"><label class="control-label">Full time score</label></div>
            <div class="col-xs-3 col-md-2">@Html.BootstrapEditorFor(m => m.HomeTeamFullTimeGoals, (bool)ViewBag.IsMatchPredictionsEnabled)</div>
            <div class="visible-lg col-md-1 text-center"><label class="control-label">-</label></div>
            <div class="col-xs-3 col-md-2">@Html.BootstrapEditorFor(m => m.AwayTeamFullTimeGoals, (bool)ViewBag.IsMatchPredictionsEnabled)</div>
            <div class="col-xs-12 col-md-3">@Html.ValidationMessageFor(m => m.HomeTeamFullTimeGoals) @Html.ValidationMessageFor(m => m.AwayTeamFullTimeGoals)</div>

        </div>

    </div>
    
    <div class="row">

        <div class="col-xs-6 col-md-4 text-right">
            @Html.LabelFor(m => m.Result, "Winner", new { @class = "control-label" })
        </div>

        <div class="col-xs-6 col-md-5" id="result-buttons">
            @{
    var htmlAttributes = new Dictionary<string, object>
                    {
                        {"class", "form-control"}
                    };
    if (!ViewBag.IsMatchPredictionsEnabled)
    {
        htmlAttributes.Add("disabled", "disabled");
    }
            }
            @Html.DropDownListFor(m => m.Result, Model.Result.ToSelectList(Model.Match), htmlAttributes)
        </div>

        <div class="visible-lg col-md-3"></div>
            
    </div>
    
    <hr class="divider" />
    
    <div class="row">

        <div class="form-group">

            <div class="col-xs-6 col-md-4 text-right">
                @Html.LabelFor(m => m.YellowCards, "Total yellow cards", new { @class = "control-label" })
            </div>
            <div class="visible-lg col-md-2"></div>
            <div class="col-xs-6 col-md-1">@Html.BootstrapEditorFor(m => m.YellowCards, (bool)ViewBag.IsMatchPredictionsEnabled)</div>
            <div class="visible-lg col-md-2"></div>
            <div class="col-xs-12 col-md-3">@Html.ValidationMessageFor(m => m.YellowCards)</div>

        </div>

    </div>
    
    <div class="row">

        <div class="form-group">

            <div class="col-xs-6 col-md-4 text-right">
                @Html.LabelFor(m => m.RedCards, "Total red cards", new { @class = "control-label" })
            </div>
            <div class="visible-lg col-md-2"></div>
            <div class="col-xs-6 col-md-1">@Html.BootstrapEditorFor(m => m.RedCards, (bool)ViewBag.IsMatchPredictionsEnabled)</div>
            <div class="visible-lg col-md-2"></div>
            <div class="col-xs-12 col-md-3">@Html.ValidationMessageFor(m => m.RedCards)</div>

        </div>

    </div>
    
    <p></p>
    
    <div class="btn-group btn-group-justified visible-xs visible-sm">
        <div class="btn-group">
            <button type="submit" class="btn btn-success">Save</button>
        </div>
    </div>

    <div class="hidden-xs hidden-sm text-center">
        <button type="submit" class="btn btn-success btn-lg" @(!(bool)ViewBag.IsMatchPredictionsEnabled ? "disabled=disabled" : "")>Save</button>
    </div>
}
&nbsp;
<div class="visible-xs visible-sm">
    <div class="btn-group btn-group-justified">
        @Html.ActionLink("Previous match", "MatchPrediction", "Predictions", new { id = ViewBag.PreviousMatchId }, new { @class = "btn btn-info btn-group" })
        @Html.ActionLink("Back to list", "Index", "Predictions", new { @class = "btn btn-info btn-group" })
        @Html.ActionLink("Next match", "MatchPrediction", "Predictions", new { id = ViewBag.NextMatchId }, new { @class = "btn btn-info btn-group" })
    </div>
</div>
<div class="hidden-xs hidden-sm">
    <div class="row">
        <div class="col-md-6 col-md-offset-3">
            <div class="btn-group btn-group-justified">
                @Html.ActionLink("Previous match", "MatchPrediction", "Predictions", new { id = ViewBag.PreviousMatchId }, new { @class = "btn btn-info btn-group" })
                @Html.ActionLink("Back to list", "Index", "Predictions", new { @class = "btn btn-info btn-group" })
                @Html.ActionLink("Next match", "MatchPrediction", "Predictions", new { id = ViewBag.NextMatchId }, new { @class = "btn btn-info btn-group" })
            </div>
        </div>
    </div>
</div>

    <script type="text/javascript">

        $(function () {

            // Match date
            $("#match-date").text(moment(moment.utc("@Model.Match.Date", "D-M-YYYY HH:mm:ss")).local().format("dddd, MMMM Do YYYY [at] HH:mm"));


            // Temporary solution to replace the dropdown with a button bar, to be removed when normal radio buttons are in place or a better solution.

            var result = $("#Result");

            if (result) {
                var buttonGroup = $('<div class="btn-group btn-group-justified" data-toggle="buttons"></div>');

                $.map($("option", result), function (element) {
                    var button = $('<label class="btn btn-default"><input type="radio" name="' + result.attr("name") + '" value="' + element.value + '">' + element.text + '</label>').appendTo(buttonGroup);

                    if (element.selected) {
                        button.addClass("active");
                        $("input", button).prop("checked", true);
                    }
                });

                buttonGroup.appendTo("#result-buttons");
                result.remove();
            }
        });
    </script>
