@using System.Globalization
@using WorldCup.Extensions
@model WorldCup.Common.Entities.MatchPrediction

@{
    ViewBag.Title = string.Format("{0} vs {1} predictions", Model.Match.HomeTeam.Name, Model.Match.AwayTeam.Name);
}

<h2>Match prediction</h2>

<div class="row">
    <div class="col-md-6">          
        <p><strong>@Html.Partial("_FlaggedTeam", new[] { Model.Match.HomeTeam.Name, Model.Match.HomeTeam.Code })</strong> vs <strong>@Html.Partial("_FlaggedTeam", new[] { Model.Match.AwayTeam.Name, Model.Match.AwayTeam.Code })</strong></p>
    </div>
    <div class="col-md-6">
        <p class="text-right">
            @Model.Match.Date.ToLocalTime().ToString(CultureInfo.CurrentCulture)<br />
            @Html.LabelFor(m => m.Match.Stage): @Model.Match.Stage
        </p>
    </div>
</div>

<hr class="divider" />

@using (Html.BeginForm("MatchPrediction", "Predictions", FormMethod.Post, new { role = "form" }))
{
    @Html.HiddenFor(m => m.MatchPredictionId)
    @Html.HiddenFor(m => m.MatchId)

    <div class="row">

        <div class='col-md-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.HomeTeamHalfTimeGoals, string.Format("{0} half time goals", Model.Match.HomeTeam != null ? Model.Match.HomeTeam.Name : ""))
                @Html.BootstrapEditorFor(m => m.HomeTeamHalfTimeGoals, (bool)ViewBag.IsMatchPredictionsEnabled)
                @Html.ValidationMessageFor(m => m.HomeTeamHalfTimeGoals)
            </div>
        </div>
        <div class='col-md-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.AwayTeamHalfTimeGoals, string.Format("{0} half time goals", Model.Match.AwayTeam != null ? Model.Match.AwayTeam.Name : ""))
                @Html.BootstrapEditorFor(m => m.AwayTeamHalfTimeGoals, (bool)ViewBag.IsMatchPredictionsEnabled)
                @Html.ValidationMessageFor(m => m.AwayTeamHalfTimeGoals)
            </div>
        </div>
    </div>

    <hr class="divider" />

    <div class="row">
        <div class='col-md-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.HomeTeamFullTimeGoals, string.Format("{0} full time goals", Model.Match.HomeTeam != null ? Model.Match.HomeTeam.Name : ""))
                @Html.BootstrapEditorFor(m => m.HomeTeamFullTimeGoals, (bool)ViewBag.IsMatchPredictionsEnabled)
                @Html.ValidationMessageFor(m => m.HomeTeamFullTimeGoals)
            </div>
        </div>
        <div class='col-md-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.AwayTeamFullTimeGoals, string.Format("{0} full time goals", Model.Match.AwayTeam != null ? Model.Match.AwayTeam.Name : ""))
                @Html.BootstrapEditorFor(m => m.AwayTeamFullTimeGoals, (bool)ViewBag.IsMatchPredictionsEnabled)
                @Html.ValidationMessageFor(m => m.AwayTeamFullTimeGoals)
            </div>
        </div>
    </div>

    <hr class="divider" />

    <div class="row">
        <div class='col-md-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.YellowCards, "Yellow cards*")
                @Html.BootstrapEditorFor(m => m.YellowCards, (bool)ViewBag.IsMatchPredictionsEnabled)
                @Html.ValidationMessageFor(m => m.YellowCards)
            </div>
        </div>
        <div class='col-md-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.RedCards, "Red cards*")
                @Html.BootstrapEditorFor(m => m.RedCards, (bool)ViewBag.IsMatchPredictionsEnabled)
                @Html.ValidationMessageFor(m => m.RedCards)
            </div>
        </div>
    </div>

    <hr class="divider" />

    <div class="row">
        <div class='col-md-6'>
            <div class="form-group">
                @Html.LabelFor(m => m.Result, "Final result*")
                @{
                    var htmlAttributes = new Dictionary<string, object>
                    {
                        {"class", "form-control"}
                    };
                    if (!ViewBag.IsMatchPredictionsEnabled)
                    {
                        htmlAttributes.Add("disabled", "disabled");
                    }
                }
                @Html.DropDownListFor(m => m.Result, Model.Result.ToSelectList(Model.Match), htmlAttributes)
                <span class="help-block">* = after extra time or penalties</span>
            </div>
        </div>

    </div>

    <button type="submit" class="btn btn-primary" @(!(bool)ViewBag.IsMatchPredictionsEnabled ? "disabled=disabled" : "")>Save</button>
}