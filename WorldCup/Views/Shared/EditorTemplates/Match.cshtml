@model WorldCup.Common.Entities.Match

@{
    object htmlAttributes;
    if (ViewData["selectTeamsAllowed"] == null || (bool)ViewData["selectTeamsAllowed"])
    {
        htmlAttributes = new
        {
            @class = "form-control"
        };
    }
    else
    {
        htmlAttributes = new
        {
            @class = "form-control",
            disabled = "disabled"
        };
    }
}


<div class="row">
    <div class='col-md-6'>
        <div class="form-group">
            @Html.LabelFor(m => m.Stage)
            @Html.EnumDropDownListFor(m => m.Stage, htmlAttributes)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.HomeTeamId)
            @Html.DropDownListFor(m => m.HomeTeamId, new SelectList(ViewBag.Teams, "Id", "Name"), htmlAttributes)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.AwayTeamId)
            @Html.DropDownListFor(m => m.AwayTeamId, new SelectList(ViewBag.Teams, "Id", "Name"), htmlAttributes)
        </div>
        <div class='col-md-7'>
            <div class="form-group">
                @Html.LabelFor(m => m.Date)
                @Html.EditorFor(m => m.Date, "_DateTime")
                <span class="label label-danger">The date and time should be UTC</span>
            </div>
        </div>
    </div>
    <div class='col-md-3'>
        <div class="form-group">
            @Html.LabelFor(m => m.HomeTeamHalfTimeGoals, string.Format("{0} half time goals", Model.HomeTeam != null ? Model.HomeTeam.Name : ""))
            @Html.EditorFor(m => m.HomeTeamHalfTimeGoals, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.AwayTeamHalfTimeGoals, string.Format("{0} half time goals", Model.AwayTeam != null ? Model.AwayTeam.Name : ""))
            @Html.EditorFor(m => m.AwayTeamHalfTimeGoals, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.HomeTeamFullTimeGoals, string.Format("{0} full time goals", Model.HomeTeam != null ? Model.HomeTeam.Name : ""))
            @Html.EditorFor(m => m.HomeTeamFullTimeGoals, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.AwayTeamFullTimeGoals, string.Format("{0} full time goals", Model.AwayTeam != null ? Model.AwayTeam.Name : ""))
            @Html.EditorFor(m => m.AwayTeamFullTimeGoals, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class='col-md-3'>
        <div class="form-group">
            @Html.LabelFor(m => m.YellowCards, "Yellow cards*")
            @Html.EditorFor(m => m.YellowCards, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.RedCards, "Red cards*")
            @Html.EditorFor(m => m.RedCards, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Result, "Final result*")
            @Html.EnumDropDownListFor(m => m.Result, new { @class = "form-control" })
            <span class="help-block">* = after extra time or penalties</span>
        </div>
    </div>
</div>

<button type="submit" class="btn btn-primary">Save</button>